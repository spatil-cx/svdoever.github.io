{"data":{"site":{"siteMetadata":{"title":"Serge van den Oever's weblog","author":"Serge van den Oever"}},"markdownRemark":{"id":"82307e37-dfcc-58df-9d64-44b3dd45ef68","html":"<p>I’m sitting at the keynote of the Sitecore <a href=\"https://www.sugcon.eu/\">SUGCON Europe 2019</a> conference listening to the opening keynote by Donovan Brown from Microsoft. Donovan Brown is a Senior DevOps Program Manager on Microsoft’s US Developer Division team and is telling about Azure DevOps. A perfect time to write a blog post on our open source Sitecore JSS starter project we have been working on for the last months.</p>\n<p>And the nice thing: the project uses Azure DevOps pipelines to build and deploy the sample site coming with the starter kit!</p>\n<p><a href=\"bit.ly/sitecoreumbrella\">Umbrella for Sitecore JSS</a> is our vision on how a website should be developed and hosted while using the JSS SDK and Sitecore as a headless CMS.</p>\n<p>With the introduction of <a href=\"https://jss.sitecore.com/\">Sitecore JavaScript Services</a>, or JSS for short, Sitecore created an SDK to allow developers to use Sitecore as a headless CMS. Finally website developers are free to build a website using their own technology stack while utilizing the Sitecore platform.</p>\n<p>Sitecore provides a great starter to start working with Sitecore JSS in combination with React, but we had some additional ideas on how we want to use JSS in combination with React. Some of those ideas are:</p>\n<ul>\n<li>Use TypeScript for development (standard Sitecore JSS starter for React used JavaScript)</li>\n<li>Run the frontend separate from the Sitecore CD server</li>\n<li>Run the frontend in a Linux Docker container, utilizing NodeJS, Express, PM2, NGINX, …</li>\n<li>Be able to run disconnected from Sitecore, so we can showcase a solution without having the licensing issues for JSS already solved</li>\n<li>Be able to export Sitecore items items including media so we can enbed them in the Docker container so we can develop “Sitecore first”, but run without Sitecore installed</li>\n</ul>\n<p>For more information head over to the <a href=\"https://github.com/macaw-interactive/react-jss-typescript-starter\">GitHub repo</a>, or checkout the <a href=\"https://react-jss-typescript-starter-develop.azurewebsites.net/\">sample website</a>!</p>\n<p>And what did we do to build and deploy the Docker image using azure pipelines?</p>\n<p>azure_pipelines.yaml:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">trigger</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">include</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> master\n    <span class=\"token punctuation\">-</span> develop\n\n<span class=\"token key atrule\">pool</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">vmImage</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'Ubuntu-16.04'</span>\n\n<span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">checkout</span><span class=\"token punctuation\">:</span> self\n  \n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n    docker build -f Docker/Dockerfile -t $(dockerId).azurecr.io/$(imageName):$(Build.SourceBranchName) .\n    docker login -u $(dockerId) -p $(dockerPassword) $(dockerId).azurecr.io\n    docker push $(dockerId).azurecr.io/$(imageName):$(Build.SourceBranchName) </span>\n  <span class=\"token key atrule\">displayName</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'docker build'</span></code></pre></div>\n<p>Pretty easy! The hard thing for the build is the multistage Dockerfile:</p>\n<div class=\"gatsby-highlight\" data-language=\"dockerfile\"><pre class=\"language-dockerfile\"><code class=\"language-dockerfile\"># Stage 0, &quot;build-stage&quot;, based on Node.js, to build and compile the frontend\nFROM tiangolo/node-frontend:10 as build-stage\nWORKDIR /app\nCOPY package*.json /app/\nRUN npm install\nCOPY ./ /app/\nRUN npm run build\nRUN npm run build-server:production\n\n# Stage 1, based on Nginx, to have only the compiled app, ready for production with Nginx\nFROM nginx:1.15\n\n# Install node\nRUN apt-get update -yq &amp;&amp; apt-get upgrade -yq\nRUN apt-get install -yq \\\n\t\tcurl \\\n\t\tgit \\\n\t\tnano \\\n\t\tgnupg \\\n\t\tgnupg2 \\\n\t\tgnupg1\nRUN curl -sL https://deb.nodesource.com/setup_10.x | bash - &amp;&amp; apt-get install -yq nodejs\n\n# Enable with ssh configures for Azure App Service\nENV SSH_PASSWD &quot;root:Docker!&quot;\nRUN apt-get update \\\n        &amp;&amp; apt-get install -y --no-install-recommends dialog \\\n        &amp;&amp; apt-get update \\\n\t&amp;&amp; apt-get install -y --no-install-recommends openssh-server \\\n\t&amp;&amp; echo &quot;$SSH_PASSWD&quot; | chpasswd \nCOPY Docker/sshd_config /etc/ssh/\n\n# Install PM2\nRUN npm install -g pm2\n\n# PM2 process script\nCOPY Docker/process.yml /app/\n\n# Entry point script\nCOPY Docker/init.sh /usr/local/bin/init.sh\nRUN chmod u+x /usr/local/bin/init.sh\n\n# Copy the default nginx.config provided by tiangolo/node-frontend\nCOPY Docker/nginx.config /etc/nginx/sites-available/default\n\n# Copy the static creat-react-app assets\nCOPY --from=build-stage /app/build/ /app/build\n\n# Copy the Node Express server\nCOPY --from=build-stage /app/build.server/ /app/build.server\n\n# Copy the disconnected mode proxy server and install dependencies\nCOPY --from=build-stage /app/server.disconnectedproxy/ /app/server.disconnectedproxy\nWORKDIR /app/server.disconnectedproxy\nRUN npm install\n\n# Copy the data/sitecore for running offline\nCOPY --from=build-stage /app/data/ /app/data\nCOPY --from=build-stage /app/sitecore/ /app/sitecore\n\nWORKDIR /app\n\nEXPOSE 80 2222\nENTRYPOINT [&quot;/usr/local/bin/init.sh&quot;]</code></pre></div>\n<p>For more information checkout the <a href=\"https://github.com/macaw-interactive/react-jss-typescript-starter\">GitHub repo</a> and let us know if it is helpful for you! Have fun!</p>","timeToRead":3,"frontmatter":{"title":"Umbrella for Sitecore JSS","date":"April 04, 2019","spoiler":"Umbrella for Sitecore JSS is our vision on how a website should be developed and hosted while using the JSS SDK and Sitecore as a headless CMS."},"fields":{"slug":"/sitecore_jss_umbrella/"}}},"pageContext":{"slug":"/sitecore_jss_umbrella/","previous":{"fields":{"slug":"/sitecore_jss_typescript_node/"},"frontmatter":{"title":"Render Sitecore 9.1 JSS site using separate node server"}},"next":{"fields":{"slug":"/serving_static_files_from_github/"},"frontmatter":{"title":"Serving static files from GitHub"}}}}