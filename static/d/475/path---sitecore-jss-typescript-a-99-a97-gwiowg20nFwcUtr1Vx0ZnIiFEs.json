{"data":{"site":{"siteMetadata":{"title":"Serge van den Oever's weblog","author":"Serge van den Oever"}},"markdownRemark":{"id":"40ed25f0-a2ca-50ae-b187-332d40e88190","html":"<p>With <a href=\"https://jss.sitecore.net\">Sitecore JSS</a> you can scaffold a new Hero component using <code class=\"language-text\">jss scaffold Hero</code>.\nThe scaffolder generates the new component in it’s own folder <code class=\"language-text\">src/components/Hero</code> named <code class=\"language-text\">index.js</code>.\nThe easy way to introduce TypeScript is described by my colleague Gary Wenneker in his blog post <a href=\"https://gary.wenneker.org/sitecore-jss-get-typed/\">Sitecore JSS: Get Typed!</a>:</p>\n<ul>\n<li>rename the <code class=\"language-text\">Hero.js</code> to <code class=\"language-text\">Hero.tsx</code></li>\n<li><code class=\"language-text\">npm install typescript @types/node @types/react @types/react-dom</code></li>\n<li>modify the <code class=\"language-text\">tsconfig.json</code></li>\n<li>run <code class=\"language-text\">tsc --watch</code> to compile the <code class=\"language-text\">.ts</code> and <code class=\"language-text\">.tsx</code> files to <code class=\"language-text\">.js</code> next to the source file</li>\n</ul>\n<p>The JSS tooling picks up the <code class=\"language-text\">.js</code> component files in the script <code class=\"language-text\">&quot;start:watch-components&quot;: &quot;node scripts/generate-component-factory.js --watch&quot;</code> for mapping the React components to JSS components. </p>\n<p>Problem with this approach that source tree is cluttered with generated <code class=\"language-text\">.js</code> files that are difficult to exclude from source control.</p>\n<p>What I did was use the <code class=\"language-text\">tsconfig.json</code> as generated by <code class=\"language-text\">create-react-app</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es5\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"allowJs\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"skipLibCheck\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"esModuleInterop\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"allowSyntheticDefaultImports\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"strict\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"forceConsistentCasingInFileNames\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"esnext\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"moduleResolution\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"resolveJsonModule\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"isolatedModules\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"noEmit\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"jsx\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"preserve\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"lib\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"es2018\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dom\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"include\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"src\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"types\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"node\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>and modify the script <code class=\"language-text\">scripts/generate-component-factory.js</code> to pick up <code class=\"language-text\">.ts</code> and <code class=\"language-text\">.tsx</code> files so components can be written in both JavaScript and TypeScript:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">      fs<span class=\"token punctuation\">.</span><span class=\"token function\">existsSync</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>componentFolderFullPath<span class=\"token punctuation\">,</span> <span class=\"token string\">'index.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n      fs<span class=\"token punctuation\">.</span><span class=\"token function\">existsSync</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>componentFolderFullPath<span class=\"token punctuation\">,</span> <span class=\"token string\">'index.jsx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span>\n<span class=\"gatsby-highlight-code-line\">      fs<span class=\"token punctuation\">.</span><span class=\"token function\">existsSync</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>componentFolderFullPath<span class=\"token punctuation\">,</span> <span class=\"token string\">'index.ts'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span></span><span class=\"gatsby-highlight-code-line\">      fs<span class=\"token punctuation\">.</span><span class=\"token function\">existsSync</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>componentFolderFullPath<span class=\"token punctuation\">,</span> <span class=\"token string\">'index.tsx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></span></code></pre></div>\n<p>And this is just the first step… I will keep you posted.</p>\n<p>Interesting stuff to investigate in this context:</p>\n<ul>\n<li><a href=\"https://github.com/Sitecore/jss/issues/74\">FR: Generate Typescript Typings from Manifest</a></li>\n</ul>","timeToRead":2,"frontmatter":{"title":"Developing React components in Typescript with Sitecore JSS 9.1","date":"January 29, 2019","spoiler":"At my company we use TypeScript for front-end development where possible. In my first steps in using JSS I wanted to build my first component in TypeScript, which did not work out of the box. In this post I describe how I got ypeScript compilation working."},"fields":{"slug":"/sitecore_jss_typescript/"}}},"pageContext":{"slug":"/sitecore_jss_typescript/","previous":{"fields":{"slug":"/weblog-deployment-to-static-azure-website/"},"frontmatter":{"title":"Weblog deployment to a static Microsoft Azure website"}},"next":{"fields":{"slug":"/_install-sitecore-91/"},"frontmatter":{"title":"Install Sitecore 9.1 in a breeze"}}}}